{
  "address": "0x4a2535AAB329B385Cf42E61Fd9d311D7A34AC6AE",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "widgetId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "input",
          "type": "bytes"
        }
      ],
      "name": "fetch",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "widgetId",
          "type": "bytes32"
        }
      ],
      "name": "getWidget",
      "outputs": [
        {
          "internalType": "address",
          "name": "widget",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "widgetId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "widget",
          "type": "address"
        }
      ],
      "name": "setWidget",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x346f3e019caf0e7183913a991f32ae0fc27df7936d286a8148117e372f7227a1",
  "receipt": {
    "to": null,
    "from": "0xA3EFD916aa60feF4941667316B0C1D2BaB53237d",
    "contractAddress": "0x4a2535AAB329B385Cf42E61Fd9d311D7A34AC6AE",
    "transactionIndex": 5,
    "gasUsed": "400054",
    "logsBloom": "0x
    "blockHash": "0x4104ba9249f3f1499175ed0bbf71473a57363498640661e21ce84c8207194d1a",
    "transactionHash": "0x346f3e019caf0e7183913a991f32ae0fc27df7936d286a8148117e372f7227a1",
    "logs": [
      {
        "transactionIndex": 5,
        "blockNumber": 15537309,
        "transactionHash": "0x346f3e019caf0e7183913a991f32ae0fc27df7936d286a8148117e372f7227a1",
        "address": "0x4a2535AAB329B385Cf42E61Fd9d311D7A34AC6AE",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000a3efd916aa60fef4941667316b0c1d2bab53237d"
        ],
        "data": "0x",
        "logIndex": 13,
        "blockHash": "0x4104ba9249f3f1499175ed0bbf71473a57363498640661e21ce84c8207194d1a"
      }
    ],
    "blockNumber": 15537309,
    "cumulativeGasUsed": "1025206",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "e17d4e9910b4b04f86d2f3a68859ab89",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"widgetId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"}],\"name\":\"fetch\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"widgetId\",\"type\":\"bytes32\"}],\"name\":\"getWidget\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"widget\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"widgetId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"widget\",\"type\":\"address\"}],\"name\":\"setWidget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/svg/SVGRegistry.sol\":\"SVGRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/interfaces/ISVGModule.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.15;\\n\\ninterface ISVGModule {\\n  function render(bytes memory input) external view returns (string memory);\\n\\n  function getEncoding() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x3352c15d00c6db8c108858e4839252c81b7d17da394778ab572c055146b43e27\",\"license\":\"MIT\"},\"contracts/svg/SVGRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.15;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { ISVGModule } from \\\"../interfaces/ISVGModule.sol\\\";\\n\\ncontract SVGRegistry is Ownable {\\n  mapping(bytes32 => address) private _modules;\\n\\n  constructor() {}\\n\\n  function fetch(bytes32 widgetId, bytes memory input) external view returns (string memory) {\\n    if (_modules[widgetId] != address(0)) {\\n      return ISVGModule(_modules[widgetId]).render(input);\\n    } else {\\n      return \\\"\\\";\\n    }\\n  }\\n\\n  function getWidget(bytes32 widgetId) external view returns (address widget) {\\n    return _modules[widgetId];\\n  }\\n\\n  function setWidget(bytes32 widgetId, address widget) external onlyOwner {\\n    _modules[widgetId] = widget;\\n  }\\n}\\n\",\"keccak256\":\"0xf4629edfc6c4e170f033ec96dcc854a5a9be4508e9949c1ff86888a1ef96e379\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105d88061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631045b14e146100675780633a68f5db1461007c578063715018a6146100a55780638da5cb5b146100ad578063e0d18500146100d2578063f2fde38b146100fb575b600080fd5b61007a61007536600461035c565b61010e565b005b61008f61008a3660046103f7565b610144565b60405161009c91906104dd565b60405180910390f35b61007a610204565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161009c565b6100ba6100e03660046104f7565b6000908152600160205260409020546001600160a01b031690565b61007a610109366004610510565b610218565b610116610296565b60009182526001602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b6000828152600160205260409020546060906001600160a01b0316156101ed57600083815260016020526040908190205490516318b6fb0f60e11b81526001600160a01b039091169063316df61e906101a19085906004016104dd565b600060405180830381865afa1580156101be573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101e6919081019061052b565b90506101fe565b506040805160208101909152600081525b92915050565b61020c610296565b61021660006102f0565b565b610220610296565b6001600160a01b03811661028a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610293816102f0565b50565b6000546001600160a01b031633146102165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610281565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461035757600080fd5b919050565b6000806040838503121561036f57600080fd5b8235915061037f60208401610340565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156103c7576103c7610388565b604052919050565b600067ffffffffffffffff8211156103e9576103e9610388565b50601f01601f191660200190565b6000806040838503121561040a57600080fd5b82359150602083013567ffffffffffffffff81111561042857600080fd5b8301601f8101851361043957600080fd5b803561044c610447826103cf565b61039e565b81815286602083850101111561046157600080fd5b816020840160208301376000602083830101528093505050509250929050565b60005b8381101561049c578181015183820152602001610484565b838111156104ab576000848401525b50505050565b600081518084526104c9816020860160208601610481565b601f01601f19169290920160200192915050565b6020815260006104f060208301846104b1565b9392505050565b60006020828403121561050957600080fd5b5035919050565b60006020828403121561052257600080fd5b6104f082610340565b60006020828403121561053d57600080fd5b815167ffffffffffffffff81111561055457600080fd5b8201601f8101841361056557600080fd5b8051610573610447826103cf565b81815285602083850101111561058857600080fd5b610599826020830160208601610481565b9594505050505056fea264697066735822122028463d2879f0e75b6015004c4d17caef4b3bbfdd495bc94b1455ed5746513ace64736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80631045b14e146100675780633a68f5db1461007c578063715018a6146100a55780638da5cb5b146100ad578063e0d18500146100d2578063f2fde38b146100fb575b600080fd5b61007a61007536600461035c565b61010e565b005b61008f61008a3660046103f7565b610144565b60405161009c91906104dd565b60405180910390f35b61007a610204565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161009c565b6100ba6100e03660046104f7565b6000908152600160205260409020546001600160a01b031690565b61007a610109366004610510565b610218565b610116610296565b60009182526001602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b6000828152600160205260409020546060906001600160a01b0316156101ed57600083815260016020526040908190205490516318b6fb0f60e11b81526001600160a01b039091169063316df61e906101a19085906004016104dd565b600060405180830381865afa1580156101be573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101e6919081019061052b565b90506101fe565b506040805160208101909152600081525b92915050565b61020c610296565b61021660006102f0565b565b610220610296565b6001600160a01b03811661028a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610293816102f0565b50565b6000546001600160a01b031633146102165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610281565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461035757600080fd5b919050565b6000806040838503121561036f57600080fd5b8235915061037f60208401610340565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156103c7576103c7610388565b604052919050565b600067ffffffffffffffff8211156103e9576103e9610388565b50601f01601f191660200190565b6000806040838503121561040a57600080fd5b82359150602083013567ffffffffffffffff81111561042857600080fd5b8301601f8101851361043957600080fd5b803561044c610447826103cf565b61039e565b81815286602083850101111561046157600080fd5b816020840160208301376000602083830101528093505050509250929050565b60005b8381101561049c578181015183820152602001610484565b838111156104ab576000848401525b50505050565b600081518084526104c9816020860160208601610481565b601f01601f19169290920160200192915050565b6020815260006104f060208301846104b1565b9392505050565b60006020828403121561050957600080fd5b5035919050565b60006020828403121561052257600080fd5b6104f082610340565b60006020828403121561053d57600080fd5b815167ffffffffffffffff81111561055457600080fd5b8201601f8101841361056557600080fd5b8051610573610447826103cf565b81815285602083850101111561058857600080fd5b610599826020830160208601610481565b9594505050505056fea264697066735822122028463d2879f0e75b6015004c4d17caef4b3bbfdd495bc94b1455ed5746513ace64736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2538,
        "contract": "contracts/svg/SVGRegistry.sol:SVGRegistry",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9401,
        "contract": "contracts/svg/SVGRegistry.sol:SVGRegistry",
        "label": "_modules",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      }
    }
  }
}